import{_ as s,j as a,k as n,V as l}from"./chunks/framework.8eb2d2ed.js";const p=JSON.parse('{"title":"使用 1Panel 部署","description":"","frontmatter":{},"headers":[],"relativePath":"use/1panel-deploy.md"}'),e={name:"use/1panel-deploy.md"},o=[l('<h1 id="使用-1panel-部署" tabindex="-1">使用 1Panel 部署 <a class="header-anchor" href="#使用-1panel-部署" aria-label="Permalink to &quot;使用 1Panel 部署&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p><a href="https://1panel.cn" target="_blank" rel="noreferrer">1Panle</a> 是一个现代化、开源的 Linux 服务器运维管理面板。</p><p>在本篇章是从网站部署到 1Panel 的过程，步骤和宝塔只有细微区别，可以简单完成平替宝塔面板。</p><h2 id="前提" tabindex="-1">前提 <a class="header-anchor" href="#前提" aria-label="Permalink to &quot;前提&quot;">​</a></h2><ul><li>已完成 Mix Space 的部署并且运行正常。</li><li>域名已经解析到对应的服务器，国内用户请备案。</li></ul><h2 id="_1panel" tabindex="-1">1Panel <a class="header-anchor" href="#_1panel" aria-label="Permalink to &quot;1Panel&quot;">​</a></h2><p>首先使用安装 1Panel，这里 Ubuntu 和 Debian 的操作略有不同。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Ubuntu</span></span>\n<span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-sSL</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://resource.fit2cloud.com/1panel/package/quick_start.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">quick_start.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">quick_start.sh</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># Debian</span></span>\n<span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-sSL</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://resource.fit2cloud.com/1panel/package/quick_start.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">quick_start.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">quick_start.sh</span></span></code></pre></div><p>在完成初始化后，面板 - 应用商店 - Web 服务器 中安装 <code>OpenResty</code>。</p><p>因为使用 Docker 容器，免去了编译过程，非常快速的就完成了 Web 服务器的搭建。</p><h2 id="反向代理后端" tabindex="-1">反向代理后端 <a class="header-anchor" href="#反向代理后端" aria-label="Permalink to &quot;反向代理后端&quot;">​</a></h2><p>再到网站中创建网站，网站类型选择 <code>反向代理</code> ，这里的主域名就是你的后端地址。</p><p>创建网站，例如 server.test.cn</p><p>代理地址填写 <code>http://127.0.0.1:2333</code> 确认后返回到网站列表，点击创建好的网站的配置。</p><p>这里将事先准备好的 TLS/SSL 证书放入 HTTPS 的选项中，这里就选择手动导入证书，当然你后续也可以绑定一个新的密钥证书地址在配置文件中。</p><p>填写完成后点击保存，提示更新成功即可进入配置反向代理阶段。</p><p>在网站配置栏找到 <code>配置文件</code> 这里就是 OpenResty 的 Nginx 配置文件了</p><p>在 location / { proxy_pass <a href="http://127.0.0.1:2333/" target="_blank" rel="noreferrer">http://127.0.0.1:2333/</a> 这两行完全替换以下配置：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/socket.io </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> proxy_buffering </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> proxy_pass </span><span style="color:#A6ACCD;">http://127.0.0.1:2333/socket.io</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> proxy_pass </span><span style="color:#A6ACCD;">http://127.0.0.1:2333/</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">REMOTE-HOST </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">remote_addr</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> add_header </span><span style="color:#A6ACCD;">X-Cache </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">upstream_cache_status</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">#Set Nginx Cache</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> set $</span><span style="color:#A6ACCD;">static_fileJsNv8TWb </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> ( </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">uri </span><span style="color:#89DDFF;">~* </span><span style="color:#C3E88D;">&quot;\\.(gif|png|jpg|css|js|woff|woff2)$&quot;</span><span style="color:#A6ACCD;"> ) </span><span style="color:#F07178;">{</span></span>\n<span class="line"><span style="color:#F07178;">           </span><span style="color:#89DDFF;"> set $</span><span style="color:#A6ACCD;">static_fileJsNv8TWb</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>\n<span class="line"><span style="color:#F07178;">           </span><span style="color:#89DDFF;"> expires </span><span style="color:#F07178;">12h</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>\n<span class="line"><span style="color:#F07178;">        }</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> ( </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">static_fileJsNv8TWb </span><span style="color:#89DDFF;">= </span><span style="color:#A6ACCD;">0 ) </span><span style="color:#F07178;">{</span></span>\n<span class="line"><span style="color:#F07178;">           </span><span style="color:#89DDFF;"> add_header </span><span style="color:#F07178;">Cache-Control no-cache</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>\n<span class="line"><span style="color:#F07178;">        }</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span></code></pre></div><p>保存并重载无报错提示即可。</p><h2 id="反向代理前端" tabindex="-1">反向代理前端 <a class="header-anchor" href="#反向代理前端" aria-label="Permalink to &quot;反向代理前端&quot;">​</a></h2><p>按照上诉步骤创建如 www.test.cn 的反向代理网站</p><p>代理地址填写 <code>http://127.0.0.1:2323</code> 确认后返回到网站列表，点击创建好的网站的配置。</p><ul><li><p>如你使用泛域名证书这里的 TLS/SSL 证书是可以完全复用的，点击 SSL 选项 <code>选择已有证书</code> 导入即可。</p></li><li><p>如没有泛域名证书这里还是手动添加你的证书密钥以及证书。</p></li></ul><p>填写完成后点击保存，提示更新成功即可进入配置反向代理。</p><p>在 location / { proxy_pass <a href="http://127.0.0.1:2323/" target="_blank" rel="noreferrer">http://127.0.0.1:2323/</a> 这两行完全替换以下配置：</p><div class="language-ngnix"><button title="Copy Code" class="copy"></button><span class="lang">ngnix</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">location ~* \\/(feed|sitemap|atom.xml)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        proxy_pass http://127.0.0.1:2333/$1;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        proxy_set_header REMOTE-HOST $remote_addr;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        add_header X-Cache $upstream_cache_status;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        add_header Cache-Control max-age=60;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    } </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    location /</span></span>\n<span class="line"><span style="color:#A6ACCD;">    {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        proxy_pass http://127.0.0.1:2323;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        proxy_set_header REMOTE-HOST $remote_addr;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        add_header X-Cache $upstream_cache_status;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        #Set Nginx Cache</span></span>\n<span class="line"><span style="color:#A6ACCD;">        set $static_fileSw1Jy3nG 0;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        if ( $uri ~* &quot;\\.(gif|png|jpg|css|js|woff|woff2)$&quot; )</span></span>\n<span class="line"><span style="color:#A6ACCD;">        {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        \tset $static_fileSw1Jy3nG 1;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        \texpires 12h;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        }</span></span>\n<span class="line"><span style="color:#A6ACCD;">        if ( $static_fileSw1Jy3nG = 0 )</span></span>\n<span class="line"><span style="color:#A6ACCD;">        {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        add_header Cache-Control no-cache;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        }</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span></code></pre></div><p>保存并重载无报错提示即可。</p><h2 id="继续" tabindex="-1">继续 <a class="header-anchor" href="#继续" aria-label="Permalink to &quot;继续&quot;">​</a></h2><p>本章基于 1Panel 的教程就完成了，请继续 <a href="https://mx-space.js.org/use/#%E5%90%8E%E5%8F%B0%E8%AE%BE%E7%BD%AE" target="_blank" rel="noreferrer">进行后台设置</a> ~~</p>',31)];const t=s(e,[["render",function(s,l,p,e,t,c){return a(),n("div",null,o)}]]);export{p as __pageData,t as default};
