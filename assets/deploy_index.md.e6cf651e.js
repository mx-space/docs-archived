import{_ as s,j as a,k as n,Y as l}from"./chunks/framework.b948d756.js";const p=JSON.parse('{"title":"部署 Mix Space","description":"","frontmatter":{"title":"部署 Mix Space"},"headers":[],"relativePath":"deploy/index.md"}'),o={name:"deploy/index.md"},e=[l('<h1 id="开始" tabindex="-1">开始 <a class="header-anchor" href="#开始" aria-label="Permalink to &quot;开始&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>在看完介绍后你一定很想尝试部署 Mix Space!</p><p>那本节内容带你完成部署，请有耐心的一点点看完。</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>小白或者不想折腾的，无脑用 Docker 就行了。</p><p>如果你想快速搭建并且已经安装 Docker，请移步 <a href="/deploy/#一键-docker-部署">Docker 构建</a>，使用一键脚本 10s 即可搞定。</p></div><h2 id="前置" tabindex="-1">前置 <a class="header-anchor" href="#前置" aria-label="Permalink to &quot;前置&quot;">​</a></h2><ul><li>前置要求： <ul><li>后端示例域名：<code>server.test.cn</code></li><li>前端示例域名：<code>www.test.cn</code></li><li>操作系统：建议<strong>最新的 Ubuntu / Debian</strong> ，或其他 <strong>Linux 内核版本不小于 <code>4.19</code></strong> 的发行版本；如果你想在 <strong>Windows 部署</strong>，请看这里 <a href="/deploy/windows.html">Windows 安装 Mix Space</a></li><li>Linux 内核版本：<strong>不小于 4.19，建议 5.x</strong></li><li>内存建议：<strong>大于 1 GiB</strong></li></ul></li><li>内存要求说明： <ul><li>构建需要的内存：<strong>大于 1 GiB</strong></li><li>运行需要的内存：<strong>不小于 768 MiB</strong></li></ul></li></ul><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>使用小于 <code>4.19</code> 版本的 Linux 内核将无法正常部署 Kami</p></div><hr><h1 id="环境准备" tabindex="-1">环境准备 <a class="header-anchor" href="#环境准备" aria-label="Permalink to &quot;环境准备&quot;">​</a></h1><h2 id="检查-linux-内核版本" tabindex="-1">检查 Linux 内核版本 <a class="header-anchor" href="#检查-linux-内核版本" aria-label="Permalink to &quot;检查 Linux 内核版本&quot;">​</a></h2><p>打开终端，输入以下命令：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">uname</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-r</span></span></code></pre></div><p>应该返回如下内容：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">~</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">uname</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-r</span></span>\n<span class="line"><span style="color:#A6ACCD;">6.0.2-</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">-MANJARO</span></span></code></pre></div><p>可以看到，我的内核版本是 6.0，大于 4.19，所以可以正常部署 Kami。</p><p>再次强调，<strong>Linux 内核版本不小于 4.19</strong> 才能构建 Kami，如果你的 Linux 内核版本不满足，或许你可以考虑一下最新版本的 Ubuntu / Debian？</p><h2 id="安装软件包" tabindex="-1">安装软件包 <a class="header-anchor" href="#安装软件包" aria-label="Permalink to &quot;安装软件包&quot;">​</a></h2><p>Debian / Ubuntu</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">apt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">update</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">apt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vim</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">wget</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git-lfs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span></span></code></pre></div><p>CentOS</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yum</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">check-update</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">yum</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vim</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">wget</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git-lfs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span></span></code></pre></div><h2 id="安装-docker" tabindex="-1">安装 Docker <a class="header-anchor" href="#安装-docker" aria-label="Permalink to &quot;安装 Docker&quot;">​</a></h2><p>SSH 连接到服务器，使用一键脚本，可以便捷地安装 Docker 和 Docker Compose：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-fsSL</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://get.docker.com</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--mirror</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Aliyun</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>该过程可能比较慢（受限于你的服务器配置和网络），请不要断开 SSH 连接；该脚本仅支持 Debian，Ubuntu，CentOS，其他系统请自行安装。</p></div><h2 id="安装-fnm-可选" tabindex="-1">安装 fnm (可选) <a class="header-anchor" href="#安装-fnm-可选" aria-label="Permalink to &quot;安装 fnm (可选)&quot;">​</a></h2><p><a href="https://github.com/Schniz/fnm" target="_blank" rel="noreferrer">fnm</a> 可以用于管理 Node.js。</p><p>打开终端，使用一键脚本，可以便捷地安装 fnm：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-fsSL</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://fnm.vercel.app/install</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span></span></code></pre></div><p>如果使用 HomeBrew：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">brew</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fnm</span></span></code></pre></div><p>重启终端即可生效</p><p>安装 Node.js 最新版本：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">fnm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--latest</span></span></code></pre></div><p>安装需要的模块：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pm2</span></span></code></pre></div><hr><h1 id="部署系统" tabindex="-1">部署系统 <a class="header-anchor" href="#部署系统" aria-label="Permalink to &quot;部署系统&quot;">​</a></h1><p>Mix Space 目前支持以下安装方法：</p><p><a href="#一键-docker-部署"><strong>一键 Docker 部署</strong></a>：最快的方式。</p><p><a href="#使用预设脚本部署"><strong>使用预设脚本部署</strong></a>：安装方便，但是前端可以修改的地方非常有限。</p><p><a href="#手动部署"><strong>手动部署</strong></a>：安装略微麻烦，前端可以修改任意地方更细分，更新频率最快。</p><h2 id="一键-docker-部署" tabindex="-1">一键 Docker 部署 <a class="header-anchor" href="#一键-docker-部署" aria-label="Permalink to &quot;一键 Docker 部署&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;(</span><span style="color:#FFCB6B;">curl</span><span style="color:#C3E88D;"> -s https://fastly.jsdelivr.net/gh/mx-space/docker@master/install.sh</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="使用预设脚本部署" tabindex="-1">使用预设脚本部署 <a class="header-anchor" href="#使用预设脚本部署" aria-label="Permalink to &quot;使用预设脚本部署&quot;">​</a></h2><p>克隆仓库。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mx-space</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mx-space</span></span>\n<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/mx-space/docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--depth=1</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 如果克隆缓慢，可以使用以下镜像地址</span></span>\n<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.1qi777.com/mx-space/docker.git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--depth</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span></code></pre></div><h3 id="整个环境" tabindex="-1">整个环境 <a class="header-anchor" href="#整个环境" aria-label="Permalink to &quot;整个环境&quot;">​</a></h3><p>所部署的环境：Kami + Core + Caddy2。</p><p>在此之前，你需要将域名解析完毕。</p><p>使用一键脚本：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span></span>\n<span class="line"><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install.sh</span></span></code></pre></div><p>实例输入：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">你的域名为：（需要提前绑定）</span><span style="color:#82AAFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">innei.ren</span></span>\n<span class="line"><span style="color:#FFCB6B;">你的邮箱为:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">若该步留空，则不部署</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Caddy</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">服务</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">: </span><span style="color:#C3E88D;">tukon@gmail.com</span></span>\n<span class="line"><span style="color:#FFCB6B;">是否部署</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Caddy</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2.0</span><span style="color:#C3E88D;">？</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">y/n</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">: </span><span style="color:#C3E88D;">y</span></span></code></pre></div><p>待流程执行完毕，进入 <code>https://server.test.cn/proxy/qaqdmin</code> ，进行初始化。</p><h3 id="仅部署服务和主站前端" tabindex="-1">仅部署服务和主站前端 <a class="header-anchor" href="#仅部署服务和主站前端" aria-label="Permalink to &quot;仅部署服务和主站前端&quot;">​</a></h3><p>所部署的环境：Kami + Core。</p><p>你不需要 IP 指向。但是需要手动处理服务器反代。</p><p>使用一键脚本：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span></span>\n<span class="line"><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./build.sh</span></span></code></pre></div><p>实例输入：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">你的域名为：（需要提前绑定）</span><span style="color:#82AAFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">innei.ren</span></span>\n<span class="line"><span style="color:#FFCB6B;">你的邮箱为:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">此步留空，则不部署</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Caddy</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">服务</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">:</span></span></code></pre></div><p>待流程执行完毕，进入 <code>http://127.0.0.1:2333/proxy/qaqdmin</code>。</p><h2 id="手动部署" tabindex="-1">手动部署 <a class="header-anchor" href="#手动部署" aria-label="Permalink to &quot;手动部署&quot;">​</a></h2><p>手动部署，是使用最多的部署方式，如果后续需要魔改前端，推荐使用手动部署。</p><h3 id="视频" tabindex="-1">视频 <a class="header-anchor" href="#视频" aria-label="Permalink to &quot;视频&quot;">​</a></h3><p>很高兴，我们的文档贡献者提供了视频教程；建议配合本文档进行操作：</p><iframe src="https://api.paugram.com/bili?bv=BV14N4y137ZW&amp;style=gray" style="height:176px;width:100%;"></iframe><hr><h3 id="部署-core" tabindex="-1">部署 Core <a class="header-anchor" href="#部署-core" aria-label="Permalink to &quot;部署 Core&quot;">​</a></h3><p>一般情况下，我们推荐使用 Docker 进行部署，步骤非常简单。</p><hr><h4 id="docker-部署" tabindex="-1">Docker 部署 <a class="header-anchor" href="#docker-部署" aria-label="Permalink to &quot;Docker 部署&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 新建文件夹</span></span>\n<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mx-space/core</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> $_</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 拉取docker-compose.yml 文件</span></span>\n<span class="line"><span style="color:#FFCB6B;">wget</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://fastly.jsdelivr.net/gh/mx-space/core@master/docker-compose.yml</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 拉取 Core 配置文件</span></span>\n<span class="line"><span style="color:#FFCB6B;">wget</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://fastly.jsdelivr.net/gh/mx-space/core@master/.env.example</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-O</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.env</span></span></code></pre></div><p>我们编辑 .env 文件，它看起来应该是这个样子的：</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># THIS ENV FILE EXAMPLE ONLY FOR DOCKER COMPOSE</span></span>\n<span class="line"><span style="color:#A6ACCD;"># SEE https://docs.docker.com/compose/environment-variables/#the-env-file</span></span>\n<span class="line"><span style="color:#A6ACCD;">JWT_SECRET=7294c34e0b28ad28          #此处填写一个长度不小于 16 个字符，不大于 32 个字符的字符串</span></span>\n<span class="line"><span style="color:#A6ACCD;">ALLOWED_ORIGINS=test.cn,www.test.cn  #此处填写被允许的域名，通常是 kami 的域名，如果允许多个域名访问，用英文逗号，分隔</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">#（可选）加密密钥，具体内容可参考 https://mx-space.js.org/feature/security.html</span></span>\n<span class="line"><span style="color:#A6ACCD;"># 若开启加密，则需注意密钥长度必须为 64 位，不然会在初始化时报错</span></span>\n<span class="line"><span style="color:#A6ACCD;"># 注意这是不可逆的，务必保存自己的秘钥。所以并不是非常推荐使用，除非你真的需要加密。</span></span>\n<span class="line"><span style="color:#A6ACCD;">ENCRYPT_KEY=593f62860255feb0a914534a43814b9809cc7534da7f5485cd2e3d3c8609acab</span></span></code></pre></div><p>如此，就可以了，接下来我们启动后端：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span></span></code></pre></div><p>我们可以查看后端是否正常运行：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">http://127.0.0.1:</span><span style="color:#F78C6C;">2333</span><span style="color:#C3E88D;">/api/v2</span></span></code></pre></div><p>返回如下内容，认为正常：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">~</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">curl</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">http://127.0.0.1:</span><span style="color:#F78C6C;">2333</span><span style="color:#C3E88D;">/api/v2</span></span>\n<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@mx-space/core</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">author</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Innei &lt;https://innei.ren&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">3.36.4</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">homepage</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://github.com/mx-space/core#readme</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">issues</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://github.com/mx-space/core/issues</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span></code></pre></div><hr><h4 id="从源码进行部署" tabindex="-1">从源码进行部署 <a class="header-anchor" href="#从源码进行部署" aria-label="Permalink to &quot;从源码进行部署&quot;">​</a></h4><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果你不对 Core 进行修改，建议使用 <a href="/deploy/#docker-部署">Docker 部署</a> ，当然，您如果有一些有意思的想法，欢迎提 issue。</p></div><p>拉取源代码：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/mx-space/core.git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--depth</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span></code></pre></div><p>安装依赖：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span></span></code></pre></div><p>本地开发：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span></code></pre></div><p>如果你想这样部署 Core 并对外提供服务，请移动到 <code>/src/app.config.ts</code> 文件。</p><p>它 13-30 行的内容如下，看起来似乎是这样的：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> CROSS_DOMAIN </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">allowedOrigins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> argv</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">allowed_origins</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> argv</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">allowed_origins</span><span style="color:#89DDFF;">?.</span><span style="color:#82AAFF;">split</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">innei.ren</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">*.innei.ren</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">shizuri.net</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">*.shizuri.net</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">localhost:*</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">127.0.0.1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mbp.cc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">local.innei.test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">22333322.xyz</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">*.dev</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      ]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// allowedReferer: &#39;innei.ren&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>其中，按照 17-26 行一样，按照格式，追加你的域名。</p><p>例如，我想要添加 <code>server.example.com</code> ，那么仅仅这样追加一行即可。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> CROSS_DOMAIN </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">allowedOrigins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> argv</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">allowed_origins</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> argv</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">allowed_origins</span><span style="color:#89DDFF;">?.</span><span style="color:#82AAFF;">split</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">innei.ren</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">*.innei.ren</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">shizuri.net</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">*.shizuri.net</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">localhost:*</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">127.0.0.1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mbp.cc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">local.innei.test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">22333322.xyz</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">*.dev</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">server.example.com</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//追加的新域名</span></span>\n<span class="line"><span style="color:#A6ACCD;">      ]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// allowedReferer: &#39;innei.ren&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>构建 &amp; 启动</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bundle</span></span></code></pre></div><p>使用 pm2 托管 Core，我们还需要修改一下脚本，移动到 <code>ecosystem.config.js</code></p><p>它看起来是如下内容：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> cpus </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">os</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> execSync </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">child_process</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> nodePath </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">execSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">npm root --quiet -g</span><span style="color:#89DDFF;">`</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#A6ACCD;">(</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">)[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> cpuLen </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cpus</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span></span>\n<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">apps</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mx-server</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">index.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">autorestart</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">exec_mode</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cluster</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">watch</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">instances</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> cpuLen</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">max_memory_restart</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">200M</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">args</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">--color</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">env</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">NODE_ENV</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">production</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">NODE_PATH</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> nodePath</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>将 12 行的 <code>index.js</code> 修改为 <code>out/index.js</code>。</p><p>看起来如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> cpus </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">os</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> execSync </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">child_process</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> nodePath </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">execSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">npm root --quiet -g</span><span style="color:#89DDFF;">`</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#A6ACCD;">(</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">)[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> cpuLen </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cpus</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span></span>\n<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">apps</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mx-server</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">out/index.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">autorestart</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">exec_mode</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cluster</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">watch</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">instances</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> cpuLen</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">max_memory_restart</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">200M</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">args</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">--color</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">env</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">NODE_ENV</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">production</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">NODE_PATH</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> nodePath</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>使用 PM2 托管：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pm2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 或者</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">prod:pm2</span></span></code></pre></div><hr><h3 id="部署-kami" tabindex="-1">部署 Kami <a class="header-anchor" href="#部署-kami" aria-label="Permalink to &quot;部署 Kami&quot;">​</a></h3><p>Kami 是 Mix Space 的默认前端，不过如果你想尝试其他风格的话，可以去 <a href="https://github.com/mx-space/mx-web-yun" target="_blank" rel="noreferrer">mx-web-yun</a> 看看。</p><h4 id="拉取源文件" tabindex="-1">拉取源文件 <a class="header-anchor" href="#拉取源文件" aria-label="Permalink to &quot;拉取源文件&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mx-space</span></span>\n<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/mx-space/kami.git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--depth</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 如果克隆缓慢，可以使用下面的镜像地址</span></span>\n<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.1qi777.com/mx-space/kami.git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--depth</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span></code></pre></div><h4 id="切换到最新的-tag" tabindex="-1">切换到最新的 tag <a class="header-anchor" href="#切换到最新的-tag" aria-label="Permalink to &quot;切换到最新的 tag&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kami</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fetch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--tags</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> rev-list --tags --max-count=1</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h4 id="拉取图片文件" tabindex="-1">拉取图片文件 <a class="header-anchor" href="#拉取图片文件" aria-label="Permalink to &quot;拉取图片文件&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lfs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fetch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--all</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lfs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span></span></code></pre></div><p>注意：如果无法正常拉取，可以到 GitHub 上手动下载文件并放到相应目录。</p><h4 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h4><p>复制 .env.example 为 .env</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">cp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.env.example</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.env</span></span></code></pre></div><p>编辑 .env 文件，它看起来应该是这个样子的</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># API 地址</span></span>\n<span class="line"><span style="color:#A6ACCD;">NEXT_PUBLIC_API_URL=https://server.test.cn/api/v2</span></span>\n<span class="line"><span style="color:#A6ACCD;"># GATEWAY 地址</span></span>\n<span class="line"><span style="color:#A6ACCD;">NEXT_PUBLIC_GATEWAY_URL=https://server.test.cn</span></span>\n<span class="line"><span style="color:#A6ACCD;">#前端使用的配置项名字</span></span>\n<span class="line"><span style="color:#A6ACCD;">NEXT_PUBLIC_SNIPPET_NAME=kami</span></span>\n<span class="line"><span style="color:#A6ACCD;"># 如果使用 CDN, 修改产物前缀；一般留空</span></span>\n<span class="line"><span style="color:#A6ACCD;">ASSETPREFIX=</span></span></code></pre></div><h4 id="构建" tabindex="-1">构建 <a class="header-anchor" href="#构建" aria-label="Permalink to &quot;构建&quot;">​</a></h4><p>这里选用 pnpm 作为包管理器。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 安装必需的模块</span></span>\n<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 构建</span></span>\n<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span></code></pre></div><h4 id="启动前端" tabindex="-1">启动前端 <a class="header-anchor" href="#启动前端" aria-label="Permalink to &quot;启动前端&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">prod:pm2</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 可选</span></span>\n<span class="line"><span style="color:#FFCB6B;">pm2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span></span></code></pre></div><p>我们可以查看前端是否正常运行：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://127.0.0.1:</span><span style="color:#F78C6C;">2323</span></span></code></pre></div><p>如果有返回数据，则认为正常。</p><h2 id="下一步" tabindex="-1">下一步 <a class="header-anchor" href="#下一步" aria-label="Permalink to &quot;下一步&quot;">​</a></h2><p><a href="/use/">开始使用~</a></p><h2 id="可能需要-可选" tabindex="-1">可能需要 (可选) <a class="header-anchor" href="#可能需要-可选" aria-label="Permalink to &quot;可能需要 (可选)&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>以下内容是可选的，如果你不需要，可以跳过；在正常情况，你不需要这些内容。</p></div><h2 id="后台单独部署" tabindex="-1">后台单独部署 <a class="header-anchor" href="#后台单独部署" aria-label="Permalink to &quot;后台单独部署&quot;">​</a></h2><p>在正常情况下，你不需要单独部署后台，因为后台已经被打包到了后端中。</p><p>如果你有以下需求：</p><ul><li>想使用其他域名作为后台地址</li><li>想使用其他端口作为后台地址</li></ul><p>那么你可以选择单独部署后台，或者你可以参考 <a href="/use/#后台自定义反向代理">后台反向代理配置</a>。</p><h3 id="拉取源文件-1" tabindex="-1">拉取源文件 <a class="header-anchor" href="#拉取源文件-1" aria-label="Permalink to &quot;拉取源文件&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mx-space</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/mx-space/mx-admin.git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--depth</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span></code></pre></div><h3 id="修改配置文件" tabindex="-1">修改配置文件 <a class="header-anchor" href="#修改配置文件" aria-label="Permalink to &quot;修改配置文件&quot;">​</a></h3><p>移动到 <code>.env.production</code> 文件，去掉 <code>VITE_</code> 前缀的注释符号，然后修改为你的配置。</p><p>例如：</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">VITE_APP_BASE_API=https://server.test.cn/api/v2</span></span>\n<span class="line"><span style="color:#A6ACCD;">VITE_APP_WEB_URL=https://www.test.cn</span></span>\n<span class="line"><span style="color:#A6ACCD;">VITE_APP_GATEWAY=https://server.test.cn</span></span>\n<span class="line"><span style="color:#A6ACCD;"># # VITE_APP_PUBLIC_URL=https://fastly.jsdelivr.net/gh/mx-space/admin-next@gh-pages/</span></span></code></pre></div><p>其他可以定义的配置在文件 <code>/src/configs.ts</code> 中。</p><h3 id="构建-1" tabindex="-1">构建 <a class="header-anchor" href="#构建-1" aria-label="Permalink to &quot;构建&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>构建 mx-admin 需要的内存至少为 2 Gib，如果你服务器内存不足，你可以在本地构建成功后，将产物上传到服务器。</p><p>在 Windows 系统上，mx-admin 无法正常构建，你可以使用 WSL2 或者 Linux 系统。</p></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span></code></pre></div><h3 id="部署产物" tabindex="-1">部署产物 <a class="header-anchor" href="#部署产物" aria-label="Permalink to &quot;部署产物&quot;">​</a></h3><p>构建生成的产物在 dist 目录下，你可以直接把它们移动到你准备好的后台网站的根目录下。</p><p>假设你准备的后台网站域名是 <code>admin.test.cn</code>，</p><p>网站根目录为 <code>/var/www/admin.test.cn/</code>，</p><p>那么，你把 dist 目录下的所有文件移动到 <code>/var/www/admin.test.cn/</code> 目录下即可。</p><h3 id="修改后端配置" tabindex="-1">修改后端配置 <a class="header-anchor" href="#修改后端配置" aria-label="Permalink to &quot;修改后端配置&quot;">​</a></h3><p>编辑 Core 的 <code>.env</code> 文件，修改 <code>ALLOWED_ORIGINS</code> ，添加你的后台域名。</p><p>示例域名为 <code>admin.test.cn</code> 。</p><p>例如：</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># THIS ENV FILE EXAMPLE ONLY FOR DOCKER COMPOSE</span></span>\n<span class="line"><span style="color:#A6ACCD;"># SEE https://docs.docker.com/compose/environment-variables/#the-env-file</span></span>\n<span class="line"><span style="color:#A6ACCD;">JWT_SECRET=7294c34e0b28ad28          #此处填写一个长度不小于 16 个字符，不大于 32 个字符的字符串</span></span>\n<span class="line"><span style="color:#A6ACCD;">ALLOWED_ORIGINS=test.cn,www.test.cn,admin.test.cn</span></span></code></pre></div><p>然后重新启动 Core 即可：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span></span></code></pre></div><h2 id="对-redis-配置" tabindex="-1">对 Redis 配置 <a class="header-anchor" href="#对-redis-配置" aria-label="Permalink to &quot;对 Redis 配置&quot;">​</a></h2><p>如果你需要使用来自 (远端 / 非容器) 的 Redis 服务，你可以通过使用 <code>argv</code> 来动态传入对应的配置项。</p><p>支持传入如下值：</p><ul><li><code>redis_host</code> Redis 服务地址，域名、IP 都可以</li><li><code>redis_port</code> Redis 服务端口</li><li><code>redis_password</code> Redis 服务密码</li></ul><p>在默认情况下，我们认为这样已经足够了。</p><h3 id="对于-docker-部署" tabindex="-1">对于 Docker 部署 <a class="header-anchor" href="#对于-docker-部署" aria-label="Permalink to &quot;对于 Docker 部署&quot;">​</a></h3><p>编辑 <code>docker-compose.yml</code> 文件，变更 <code>command</code> 这项内容，添加你需要传入的值，以传入 <code>redis_host</code> 和 <code>redis_password</code> 为例，如下所示：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">3.8</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F07178;">services</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">app</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">container_name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mx-server</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">innei/mx-server:latest</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">command</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node index.js --redis_host=远端地址 --db_host=mongo --redis_password=redis?passwd --allowed_origins=${ALLOWED_ORIGINS} --jwt_secret=${JWT_SECRET} --color</span></span></code></pre></div><p>然后重新创建容器即可生效：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span></span></code></pre></div><h3 id="对于源码部署" tabindex="-1">对于源码部署 <a class="header-anchor" href="#对于源码部署" aria-label="Permalink to &quot;对于源码部署&quot;">​</a></h3><p>针对这种部署方式，我们可以修改 <code>ecosystem.config.js</code> 在 12 行，也就是 <code>script</code> 这一项，添加你需要传入的值，如下所示：</p><div class="language-diff"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">const { cpus } = require(&#39;os&#39;)</span></span>\n<span class="line"><span style="color:#A6ACCD;">const { execSync } = require(&#39;child_process&#39;)</span></span>\n<span class="line"><span style="color:#A6ACCD;">const nodePath = execSync(`npm root --quiet -g`, { encoding: &#39;utf-8&#39; }).split(</span></span>\n<span class="line"><span style="color:#A6ACCD;">  &#39;\\n&#39;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">)[0]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">const cpuLen = cpus().length</span></span>\n<span class="line"><span style="color:#A6ACCD;">module.exports = {</span></span>\n<span class="line"><span style="color:#A6ACCD;">  apps: [</span></span>\n<span class="line"><span style="color:#A6ACCD;">    {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      name: &#39;mx-server&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">     script: &#39;out/index.js --redis_host=远端地址 --redis_password=redis?passwd&#39;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      autorestart: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      exec_mode: &#39;cluster&#39;,</span></span></code></pre></div><p>当然，我们也可以修改源码，修改对应的配置项，这样就可以不用传入了。</p><p>移动到 <code>/src/app.config.ts</code> 文件，在 47 行左右，修改对应的配置项：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> REDIS </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">host</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> argv</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">redis_host </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">远端</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">port</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> argv</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">redis_port </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6379</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">password</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> argv</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">redis_password </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">redis?passwd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">ttl</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">httpCacheTTL</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">max</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">disableApiCache</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">    (isDev </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> argv</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">disable_cache) </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ENABLE_CACHE_DEBUG</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>当你修改完成，你需要重新构建，并重启服务：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bundle</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">prod:pm2</span></span></code></pre></div><h2 id="对-mongodb-配置" tabindex="-1">对 MongoDB 配置 <a class="header-anchor" href="#对-mongodb-配置" aria-label="Permalink to &quot;对 MongoDB 配置&quot;">​</a></h2><p>如果你需要使用来自 (远端 / 非容器) 的 MongoDB 服务，你可以通过使用 <code>argv</code> 来动态传入对应的配置项。</p><p>支持传入如下值：</p><ul><li><code>collection_name</code> 数据库集合名字</li><li><code>db_host</code> MongoDB 服务地址，域名、IP 都可以</li><li><code>db_port</code> MongoDB 服务端口</li><li><code>db_user</code> MongoDB 服务用户名</li><li><code>db_password</code> MongoDB 服务密码</li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>如果你需要使用密码登录，你不仅仅需要传入 password，还需要传入 user，建议你对数据库集合划分好用户权限</p></div><h3 id="对于-docker-部署-1" tabindex="-1">对于 Docker 部署 <a class="header-anchor" href="#对于-docker-部署-1" aria-label="Permalink to &quot;对于 Docker 部署&quot;">​</a></h3><p>编辑 <code>docker-compose.yml</code> 文件，变更 <code>command</code> 这项内容，添加你需要传入的值，以传入 <code>db_host</code> <code>db_user</code> 和 <code>db_password</code> 为例，如下所示：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">3.8</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F07178;">services</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">app</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">container_name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mx-server</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">innei/mx-server:latest</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">command</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node index.js --redis_host=redis --db_host=远端地址 --db_user=mongodb-test --db_password=db?passwd --allowed_origins=${ALLOWED_ORIGINS} --jwt_secret=${JWT_SECRET} --color</span></span></code></pre></div><p>然后我们重启创建容器即可：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">docker compose up -d</span></span></code></pre></div><h3 id="对于源码部署-1" tabindex="-1">对于源码部署 <a class="header-anchor" href="#对于源码部署-1" aria-label="Permalink to &quot;对于源码部署&quot;">​</a></h3><p>和 Redis 一样，我们可以修改 <code>ecosystem.config.js</code> 在 12 行，也就是 <code>script</code> 这一项，添加你需要传入的值，如下所示：</p><div class="language-diff"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">const { cpus } = require(&#39;os&#39;)</span></span>\n<span class="line"><span style="color:#A6ACCD;">const { execSync } = require(&#39;child_process&#39;)</span></span>\n<span class="line"><span style="color:#A6ACCD;">const nodePath = execSync(`npm root --quiet -g`, { encoding: &#39;utf-8&#39; }).split(</span></span>\n<span class="line"><span style="color:#A6ACCD;">  &#39;\\n&#39;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">)[0]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">const cpuLen = cpus().length</span></span>\n<span class="line"><span style="color:#A6ACCD;">module.exports = {</span></span>\n<span class="line"><span style="color:#A6ACCD;">  apps: [</span></span>\n<span class="line"><span style="color:#A6ACCD;">    {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      name: &#39;mx-server&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">     script: &#39;out/index.js --db_host=远端地址 --db_user=mongodb-test --db_password=db?passwd&#39;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      autorestart: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      exec_mode: &#39;cluster&#39;,</span></span></code></pre></div><p>当然，我们也可以修改源码，修改对应的配置项，这样就可以不用传入了。</p><p>移动到 <code>/src/app.config.ts</code> 文件，在 32 行左右，修改对应的配置项：</p><div class="language-diff"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">export const MONGO_DB = {</span></span>\n<span class="line"><span style="color:#A6ACCD;">  dbName: argv.collection_name || (DEMO_MODE ? &#39;mx-space_demo&#39; : &#39;mx-space&#39;),</span></span>\n<span class="line"><span style="color:#A6ACCD;">  host: argv.db_host || &#39;远端&#39;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  port: argv.db_port || 27017,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  user: argv.db_user || &#39;mongodb-test&#39;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  password: argv.db_password || &#39;db?passwd&#39;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  get uri() {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    let userPassword =</span></span>\n<span class="line"><span style="color:#A6ACCD;">      this.user &amp;&amp; this.password ? this.user + &#39;:&#39; + this.password + &#39;@&#39; : &#39;&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">     return `mongodb://${userPassword}${this.host}:${this.port}/${</span></span>\n<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">      isTest ? &#39;mx-space_unitest&#39; : this.dbName</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }`</span></span>\n<span class="line"><span style="color:#A6ACCD;">  },</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>当你修改完成，你需要重新构建，并重启服务：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bundle</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">prod:pm2</span></span></code></pre></div>',196)];const t=s(o,[["render",function(s,l,p,o,t,c){return a(),n("div",null,e)}]]);export{p as __pageData,t as default};
